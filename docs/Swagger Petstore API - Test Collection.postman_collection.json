{
	"info": {
		"_postman_id": "06a8e938-bfb9-4c23-b33d-db49752608ef",
		"name": "Swagger Petstore API - Test Collection",
		"description": "Colección completa de pruebas para la API Swagger Petstore con casos positivos y negativos para todas las operaciones CRUD",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28337267"
	},
	"item": [
		{
			"name": "Pet Operations",
			"item": [
				{
					"name": "POST - Add Pet (Positive)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Pet created successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(\"Buddy\");",
									"    pm.expect(jsonData.status).to.eql(\"available\");",
									"    pm.variables.set(\"petId\", jsonData.id); // Guardar ID dinámico",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{petId}},\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Dogs\"\n  },\n  \"name\": \"Buddy\",\n  \"photoUrls\": [\n    \"https://example.com/photo1.jpg\",\n    \"https://example.com/photo2.jpg\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 1,\n      \"name\": \"friendly\"\n    },\n    {\n      \"id\": 2,\n      \"name\": \"trained\"\n    }\n  ],\n  \"status\": \"available\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST - Add Pet (Negative - Invalid Data)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 405 - Invalid input\", function () {",
									"    pm.response.to.have.status(405);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"invalid_id\",\n  \"category\": {\n    \"id\": \"invalid_category_id\",\n    \"name\": \"\"\n  },\n  \"photoUrls\": []\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET - Find Pet by ID (Positive)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Pet found successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.exist;",
									"    pm.expect(jsonData.name).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "api_key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/{{petId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"{{petId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET - Find Pet by ID (Negative - Not Found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404 - Pet not found\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "api_key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/999799",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"999799"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET - Find Pet by Invalid ID (Negative)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 - Invalid ID\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "api_key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/invalid_id",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"invalid_id"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET - Find Pets by Status (Positive)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Returns array of pets\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('array');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pet/findByStatus?status=available&status=pending",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "available"
								},
								{
									"key": "status",
									"value": "pending"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET - Find Pets by Status (Negative - Invalid Status)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 - Invalid status value\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/pet/findByStatus?status=invalid_status",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "invalid_status"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT - Update Pet (Positive)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Pet updated successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.name).to.eql(\"Buddy Updated\");",
									"    pm.expect(jsonData.status).to.eql(\"sold\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{petId}},\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Dogs\"\n  },\n  \"name\": \"Buddy Updated\",\n  \"photoUrls\": [\n    \"https://example.com/new_photo.jpg\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 1,\n      \"name\": \"very friendly\"\n    }\n  ],\n  \"status\": \"sold\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT - Update Pet (Negative - Pet Not Found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404 - Pet not found\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 999999,\n  \"category\": {\n    \"id\": 1,\n    \"name\": \"Dogs\"\n  },\n  \"name\": \"Non Existent Pet\",\n  \"photoUrls\": [\n    \"https://example.com/photo.jpg\"\n  ],\n  \"status\": \"available\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/pet",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE - Delete Pet (Positive)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "api_key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/{{petId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"{{petId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE - Delete Pet (Negative - Pet Not Found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404 - Pet not found\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "api_key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/pet/999999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"pet",
								"999999"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Store Operations",
			"item": [
				{
					"name": "GET - Get Inventory (Positive)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Returns inventory object\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.be.an('object');",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "api_key",
								"value": "{{apiKey}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/store/inventory",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"inventory"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST - Place Order (Positive)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Order placed successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.status).to.eql(\"placed\");",
									"    pm.expect(jsonData.quantity).to.eql(2);",
									"    pm.variables.set(\"orderId\", jsonData.id); // Guardar ID dinámico",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": {{orderId}},\n  \"petId\": {{petId}},\n  \"quantity\": 2,\n  \"shipDate\": \"2024-12-25T10:00:00.000Z\",\n  \"status\": \"placed\",\n  \"complete\": false\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/store/order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST - Place Order (Negative - Invalid Data)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 - Invalid Order\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"invalid_order_id\",\n  \"petId\": \"invalid_pet_id\",\n  \"quantity\": \"invalid_quantity\",\n  \"shipDate\": \"invalid_date\",\n  \"status\": \"invalid_status\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/store/order",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET - Find Order by ID (Positive)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Order found successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.id).to.exist;",
									"    pm.expect(jsonData.status).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/store/order/{{orderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order",
								"{{orderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET - Find Order by ID (Negative - Order Not Found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404 - Order not found\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/store/order/999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order",
								"999"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET - Find Order by Invalid ID (Negative)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 - Invalid ID supplied\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/store/order/0",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE - Delete Order (Positive)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/store/order/{{orderId}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order",
								"{{orderId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE - Delete Order (Negative - Order Not Found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404 - Order not found\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/store/order/999",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"store",
								"order",
								"999"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User Operations",
			"item": [
				{
					"name": "POST - Create User (Positive)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 1,\n  \"username\": \"{{username}}\",\n  \"firstName\": \"John\",\n  \"lastName\": \"Doe\",\n  \"email\": \"john.doe@example.com\",\n  \"password\": \"password123\",\n  \"phone\": \"+1-555-0123\",\n  \"userStatus\": 1\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST - Create User (Negative - Missing Required Fields)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User creation with invalid data handled\", function () {",
									"    pm.expect(pm.response.code).to.be.oneOf([200, 400, 422]);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 2,\n  \"username\": \"\",\n  \"email\": \"invalid-email\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET - Get User by Username (Positive)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"User found successfully\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData.username).to.eql(pm.variables.get('username'));",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/{{username}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{username}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET - Get User by Username (Negative - User Not Found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404 - User not found\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/nonexistentuser",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"nonexistentuser"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET - User Login (Positive)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Login successful - returns session token\", function () {",
									"    pm.expect(pm.response.text()).to.not.be.empty;",
									"});",
									"",
									"pm.test(\"Response headers contain rate limit info\", function () {",
									"    pm.expect(pm.response.headers.get('X-Rate-Limit')).to.exist;",
									"    pm.expect(pm.response.headers.get('X-Expires-After')).to.exist;",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/login?username={{username}}&password=password123",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "{{username}}"
								},
								{
									"key": "password",
									"value": "password123"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET - User Login (Negative - Invalid Credentials)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400 - Invalid username/password\", function () {",
									"    pm.response.to.have.status(400);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/login?username=invaliduser&password=wrongpassword",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "invaliduser"
								},
								{
									"key": "password",
									"value": "wrongpassword"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT - Update User (Positive)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 1,\n  \"username\": \"{{username}}\",\n  \"firstName\": \"John Updated\",\n  \"lastName\": \"Doe Updated\",\n  \"email\": \"john.updated@example.com\",\n  \"password\": \"newpassword123\",\n  \"phone\": \"+1-555-9999\",\n  \"userStatus\": 2\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user/{{username}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{username}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT - Update User (Negative - User Not Found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404 - User not found\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": 999,\n  \"username\": \"nonexistentuser\",\n  \"firstName\": \"Non\",\n  \"lastName\": \"Existent\",\n  \"email\": \"nonexistent@example.com\",\n  \"password\": \"password123\",\n  \"phone\": \"+1-555-0000\",\n  \"userStatus\": 1\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/user/nonexistentuser",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"nonexistentuser"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET - User Logout (Positive)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Logout successful\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"logged out\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/logout",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE - Delete User (Positive)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/{{username}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"{{username}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE - Delete User (Negative - User Not Found)",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 404 - User not found\", function () {",
									"    pm.response.to.have.status(404);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/user/nonexistentuser",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"user",
								"nonexistentuser"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://petstore.swagger.io/v2"
		},
		{
			"key": "petId",
			"value": "12345"
		},
		{
			"key": "orderId",
			"value": "1"
		},
		{
			"key": "username",
			"value": "testuser"
		},
		{
			"key": "apiKey",
			"value": "special-key"
		}
	]
}